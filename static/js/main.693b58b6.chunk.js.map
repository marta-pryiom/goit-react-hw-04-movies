{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Navigation/Navigation.js","services/movie-api.js","components/MoviePreview/MoviePreview.js","components/ListAllMovies/ListAllMovies.js","components/InfoMovieCard/InfoMovieCard.js","components/Cast/Cast.js","components/Reviews/Reviews.js","components/MovieNavigation/MovieNavigation.js","views/MovieDetailsPage/MovieDetailsPage.js","views/HomePage/HomePage.js","components/Form/Form.js","views/MoviesPage/MoviesPage.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","Feedback","Navigation","exact","to","Link","activeClassName","ActiveLink","API_KEY","a","axios","get","data","trends","results","console","error","query","defaults","baseURL","movieInfo","movieId","response","log","message","cast","id","API","getMovies","searchWordMovie","movieCast","movieReviews","MoviePreview","title","poster","vote","card","thumb","src","alt","text","ListAllMovies","moviesList","location","useLocation","length","map","vote_average","poster_path","media_type","name","pathname","state","from","InfoMovieCard","Cast","useState","actors","setActors","useEffect","then","actor","character","Reviews","reviews","setReviews","review","content","MovieNavigation","url","useRouteMatch","MovieDetailsPage","useParams","setMovieInfo","path","HomePage","movies","setMovies","list","component","Form","onSubmit","searchWord","setSearchWord","reset","e","preventDefault","trim","type","autoComplete","autoFocus","placeholder","onChange","value","target","MoviesPage","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,wCCA/DD,EAAOC,QAAU,CAAC,SAAW,8B,wICQdC,MANf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,SAAlB,SAA6BH,K,wBCFvB,SAASI,IACtB,OACE,gCACE,cAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIL,UAAWC,IAAEK,KAAMC,gBAAiBN,IAAEO,WAA5D,kBAGA,cAAC,IAAD,CACEJ,OAAK,EACLC,GAAG,UACHL,UAAWC,IAAEK,KACbC,gBAAiBN,IAAEO,WAJrB,uB,qDCPAC,EAAU,mC,4CAMhB,gCAAAC,EAAA,+EAE2BC,IAAMC,IAAN,qCAAwCH,IAFnE,uBAEYI,EAFZ,EAEYA,KACFC,EAASD,EAAKE,QAHxB,kBAIWD,GAJX,gCAMIE,QAAQC,MAAM,+BANlB,0D,kEAWA,WAA+BC,GAA/B,mBAAAR,EAAA,+EAE2BC,IAAMC,IAAN,iCACKH,EADL,iCACqCS,EADrC,gCAF3B,uBAEYL,EAFZ,EAEYA,KAGFE,EAAUF,EAAKE,QALzB,kBAMWA,GANX,gCAQIC,QAAQC,MAAM,sCARlB,0D,sBAdAN,IAAMQ,SAASC,QAAU,8BA4BzB,IAAMC,EAAS,uCAAG,WAAMC,GAAN,eAAAZ,EAAA,+EAESC,IAAMC,IAAN,kBACVU,EADU,oBACSb,EADT,oBAFT,cAERc,EAFQ,yBAKPA,EAASV,MALF,gCAOdG,QAAQQ,IAAI,KAAMC,SAPJ,yDAAH,sD,4CAYf,WAAyBH,GAAzB,iBAAAZ,EAAA,+EAE2BC,IAAMC,IAAN,kBACVU,EADU,4BACiBb,EADjB,oBAF3B,uBAEYI,EAFZ,EAEYA,KAFZ,kBAKWA,EAAKa,MALhB,gCAOIV,QAAQC,MAAM,kCAPlB,0D,kEAYA,WAA4BU,GAA5B,iBAAAjB,EAAA,+EAE2BC,IAAMC,IAAN,kBACVe,EADU,4BACYlB,EADZ,2BAF3B,uBAEYI,EAFZ,EAEYA,KAFZ,kBAKWA,EAAKE,SALhB,gCAOIC,QAAQC,MAAM,4BAPlB,0D,sBAWA,IAAMW,EAAM,CACVC,U,2CACAC,gB,4CACAT,YACAU,U,4CACAC,a,6CAEaJ,I,iBCpCAK,EAhCM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,OAAmB,EAAXC,KAOrC,OACE,sBAAKpC,UAAWC,IAAEoC,KAAlB,UACE,qBAAKrC,UAAWC,IAAEqC,MAAlB,SACE,qBAAKC,IAAKJ,EAAQK,IAAKN,EAAOlC,UAAWC,IAAEkC,WAG7C,mBAAGnC,UAAWC,IAAEwC,KAAhB,SACE,+BAAOP,UClBA,SAASQ,EAAT,GAAwC,IAAfC,EAAc,EAAdA,WACtC3B,QAAQQ,IAAImB,GACZ,IAAMC,EAAWC,cACjB,OACE,6BACGF,EAAWG,QACVH,EAAWI,KACT,gBAAGpB,EAAH,EAAGA,GAAIO,EAAP,EAAOA,MAAOc,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,YAA5B,EAAyCC,WAAzC,EAAqDC,KAArD,OACE,6BACE,cAAC,IAAD,CACE9C,GAAI,CACF+C,SAAS,UAAD,OAAYzB,GACpB0B,MAAO,CACLC,KAAMV,IAJZ,SAQE,cAAC,EAAD,CACEV,MAAOA,EACPC,OAAQc,EACRb,KAAMY,OAZHrB,QCVN,SAAS4B,EAAT,GAAuC,IAAdlC,EAAa,EAAbA,UACtCL,QAAQQ,IAAIH,GACZ,IACEa,EAOEb,EAPFa,MAMAiB,EACE9B,EADF8B,KAEF,OACE,mCACE,mCAAMjB,GAASiB,OCTN,SAASK,EAAT,GAA4B,IAAZlC,EAAW,EAAXA,QAI7BN,QAAQQ,IAAIF,GAEZ,MAA4BmC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OALAC,qBAAU,WACRhC,EAAIG,UAAUT,GAASuC,KAAKF,KAC3B,CAACrC,IAEJN,QAAQQ,IAAIkC,GAEV,mCACGA,EAAOZ,OAAS,GACf,6BACGY,EAAOX,KAAI,SAAAe,GACV,OACE,+BACE,kCAAKA,EAAMX,QACX,6CAAgBW,EAAMC,eAFfD,EAAMnC,WCpBd,SAASqC,EAAT,GAA+B,IAAZ1C,EAAW,EAAXA,QAChC,EAA8BmC,mBAAS,IAAvC,mBAAOQ,EAAP,KAAgBC,EAAhB,KAMA,OAJAN,qBAAU,WACRhC,EAAII,aAAaV,GAASuC,KAAKK,KAC9B,CAAC5C,IACJN,QAAQQ,IAAIyC,GAEV,mCACGA,EAAQnB,OAAS,GAChB,6BACGmB,EAAQlB,KAAI,SAAAoB,GACX,OACE,6BACE,4BAAIA,EAAOC,WADJD,EAAOxC,WCVf,SAAS0C,IACtB,IAAQC,EAAQC,cAARD,IAeR,OACE,mCACE,+BACE,cAAC,IAAD,CACEjE,GAAE,UAAKiE,EAAL,SADJ,kBAMA,cAAC,IAAD,CACEjE,GAAE,UAAKiE,EAAL,YADJ,0BChBO,SAASE,IACtB,IAAQlD,EAAYmD,cAAZnD,QACAgD,EAAQC,cAARD,IAER,EAAkCb,mBAAS,MAA3C,mBAAOpC,EAAP,KAAkBqD,EAAlB,KAqBA,OAnBAd,qBAAU,WACRhC,EAAIP,UAAUC,GAASuC,KAAKa,KAC3B,CAACpD,IAkBF,qCACGD,GAAa,cAACkC,EAAD,CAAelC,UAAWA,IACvCA,GAAa,cAACgD,EAAD,IASd,eAAC,IAAD,WACE,cAAC,IAAD,CAAOjE,OAAK,EAACuE,KAAI,UAAKL,EAAL,SAAjB,SACE,cAACd,EAAD,CAAMlC,QAASA,MAEjB,cAAC,IAAD,CAAOlB,OAAK,EAACuE,KAAI,UAAKL,EAAL,YAAjB,SACE,cAACN,EAAD,CAAS1C,QAASA,YClDb,SAASsD,IACtB,MAA4BnB,mBAAS,IAArC,mBAAOoB,EAAP,KAAeC,EAAf,KAIA,OAHAlB,qBAAU,WACRhC,EAAIC,YAAYgC,MAAK,SAAAkB,GAAI,OAAID,EAAUC,QACtC,IAED,eAAC,IAAD,WACE,cAAC,IAAD,CAAO3E,OAAK,EAACuE,KAAK,IAAlB,SACE,cAACjC,EAAD,CAAeC,WAAYkC,MAE7B,cAAC,IAAD,CAAOF,KAAK,mBAAmBK,UAAWR,O,YCfjC,SAASS,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAC7B,EAAoCzB,mBAAS,IAA7C,mBAAO0B,EAAP,KAAmBC,EAAnB,KAeMC,EAAQ,WACZD,EAAc,KAEhB,OACE,gCACE,4CACA,uBAAMF,SAdW,SAAAI,GACnBA,EAAEC,iBACwB,KAAtBJ,EAAWK,QACbxE,QAAQQ,IAAI,sDAEd0D,EAASC,GACTE,KAQE,UACE,uBACEI,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,SAzBkB,SAAAP,GACxB,IAAQQ,EAAUR,EAAES,OAAZD,MACRV,EAAcU,GACd9E,QAAQQ,IAAI2D,MAwBR,wBAAQM,KAAK,SAAb,0BChBO,SAASO,IACtB,MAAoCvC,mBAAS,IAA7C,mBAAO0B,EAAP,KAAmBC,EAAnB,KACA,EAA4B3B,mBAAS,IAArC,mBAAOoB,EAAP,KAAeC,EAAf,KAGQH,EAASJ,cAATI,KACRf,qBAAU,WACW,KAAfuB,GAGJvD,EAAIE,gBAAgBqD,GAAYtB,MAAK,SAAAgB,GACnCC,GAAU,SAAAmB,GAAI,4BAAQA,GAAR,YAAiBpB,OAC/B7D,QAAQQ,IAAIqD,QAEb,CAACM,IAMJ,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOR,KAAI,UAAKA,EAAL,aAAsBK,UAAWR,IAC5C,eAAC,IAAD,CAAOpE,OAAK,EAACuE,KAAK,UAAlB,UACE,cAACM,EAAD,CAAMC,SATO,SAAAC,GACnBC,EAAcD,GACdnE,QAAQQ,SAQF,cAACkB,EAAD,CAAeC,WAAYkC,YCnCtB,SAASqB,IACtB,OACE,eAAC,EAAD,WACE,cAAC/F,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACuE,KAAK,IAAIK,UAAWJ,IACjC,cAAC,IAAD,CAAOD,KAAK,UAAUK,UAAWgB,IACjC,cAAC,IAAD,CAAOhB,UAAWJ,UCP1BuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAACH,EAAD,QAGJI,SAASC,eAAe,W","file":"static/js/main.693b58b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"Navigation_Link__1IsN4\",\"ActiveLink\":\"Navigation_ActiveLink__XB_Ok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback\":\"Container_Feedback__2_12q\"};","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.Feedback}>{children}</div>;\r\n}\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\nexport default Container;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <NavLink exact to=\"/\" className={s.Link} activeClassName={s.ActiveLink}>\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        exact\r\n        to=\"/movies\"\r\n        className={s.Link}\r\n        activeClassName={s.ActiveLink}\r\n      >\r\n        Movies\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nconst API_KEY = '98a377205a96ff71da3bcf70b617967d';\r\n\r\n// const API_KEY = '7fa19289450d103be1f54a0c993182c2';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\r\n\r\n/*список самых популярных фильмов на сегодня для создания коллекции на главной странице.*/\r\nasync function getMovies() {\r\n  try {\r\n    const { data } = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\r\n    const trends = data.results;\r\n    return trends;\r\n  } catch (err) {\r\n    console.error('Error with fetch movie-list');\r\n  }\r\n}\r\n\r\n/* поиск кинофильма по ключевому слову на странице фильмов*/\r\nasync function searchWordMovie(query) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n    );\r\n    const results = data.results;\r\n    return results;\r\n  } catch (err) {\r\n    console.error('Error with fetch searching by name');\r\n  }\r\n}\r\n\r\n/*запрос полной информации о фильме для страницы кинофильма.*/\r\n\r\nconst movieInfo = async movieId => {\r\n  try {\r\n    const response = await axios.get(\r\n      `3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\n/*запрос информации о актёрском составе для страницы кинофильма. */\r\nasync function movieCast(movieId) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return data.cast;\r\n  } catch (err) {\r\n    console.error('Error with fetch cast of movie');\r\n  }\r\n}\r\n// movieCast(438631).then(res => console.log(res));\r\n/* запрос обзоров для страницы кинофильма.*/\r\nasync function movieReviews(id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n    );\r\n    return data.results;\r\n  } catch (err) {\r\n    console.error('Error with fetch reviews');\r\n  }\r\n}\r\n// movieReviews(438631).then(res => console.log(res));\r\nconst API = {\r\n  getMovies,\r\n  searchWordMovie,\r\n  movieInfo,\r\n  movieCast,\r\n  movieReviews,\r\n};\r\nexport default API;\r\n","// import PropTypes from 'prop-types';\r\n\r\nimport s from './MoviePreview.module.css';\r\n// import placeholder from '../../assets/images/placeholder.png';\r\n\r\n// Компонент превью фильма в общем списке фильмов\r\nconst MoviePreview = ({ title, poster, vote }) => {\r\n  // const posterUrl = poster;\r\n  //   const posterUrl = poster\r\n  //     ? `https://image.tmdb.org/t/p/w500${poster}`\r\n  //     : placeholder;\r\n  //   const voteStyle = vote > 5 ? s['vote--top'] : s['vote--low'];\r\n\r\n  return (\r\n    <div className={s.card}>\r\n      <div className={s.thumb}>\r\n        <img src={poster} alt={title} className={s.poster} />\r\n      </div>\r\n\r\n      <p className={s.text}>\r\n        <span>{title}</span>\r\n        {/* {vote ? <b className={voteStyle}>{vote}</b> : null} */}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\n// MoviePreview.defaultProps = {\r\n//   poster: '',\r\n//   vote: null,\r\n// };\r\n\r\n// MoviePreview.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n//   poster: PropTypes.string,\r\n//   vote: PropTypes.number,\r\n// };\r\n\r\nexport default MoviePreview;\r\n","import { Link, useLocation } from 'react-router-dom';\r\nimport MoviePreview from '../MoviePreview';\r\nexport default function ListAllMovies({ moviesList }) {\r\n  console.log(moviesList);\r\n  const location = useLocation();\r\n  return (\r\n    <ul>\r\n      {moviesList.length &&\r\n        moviesList.map(\r\n          ({ id, title, vote_average, poster_path, media_type, name }) => (\r\n            <li key={id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `movies/${id}`,\r\n                  state: {\r\n                    from: location,\r\n                  },\r\n                }}\r\n              >\r\n                <MoviePreview\r\n                  title={title}\r\n                  poster={poster_path}\r\n                  vote={vote_average}\r\n                />\r\n                {/* <img src={poster_path} alt={media_type} />\r\n            <p>{vote_average}</p> */}\r\n              </Link>\r\n            </li>\r\n          )\r\n        )}\r\n    </ul>\r\n  );\r\n}\r\n","export default function InfoMovieCard({ movieInfo }) {\r\n  console.log(movieInfo);\r\n  const {\r\n    title,\r\n    // release_date,\r\n    // vote_average,\r\n    // poster_path,\r\n    // overview,\r\n    // genres,\r\n    name,\r\n  } = movieInfo;\r\n  return (\r\n    <>\r\n      <h1> {title || name}</h1>\r\n    </>\r\n  );\r\n}\r\n\r\n/* /* <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} />\r\n      <div>\r\n        {title && (\r\n          <h1>\r\n            {title}\r\n            {release_date ? (\r\n              <span>({release_date.substring(0, 4)})</span>\r\n            ) : (\r\n              <span>(N/A)</span>\r\n            )}\r\n          </h1>\r\n        )}\r\n      </div> */\r\n// </> */\r\n","import { useState, useEffect } from 'react';\r\n\r\n// import { useRouteMatch, useParams } from 'react-router-dom';\r\nimport API from '../../services/movie-api';\r\nexport default function Cast({ movieId }) {\r\n  //   const match = useRouteMatch();\r\n  //   console.log(match.params);\r\n  //   const { id } = useParams();\r\n  console.log(movieId);\r\n\r\n  const [actors, setActors] = useState([]);\r\n  useEffect(() => {\r\n    API.movieCast(movieId).then(setActors);\r\n  }, [movieId]);\r\n\r\n  console.log(actors);\r\n  return (\r\n    <>\r\n      {actors.length > 0 && (\r\n        <ul>\r\n          {actors.map(actor => {\r\n            return (\r\n              <li key={actor.id}>\r\n                <p> {actor.name}</p>\r\n                <p>character - {actor.character}</p>\r\n\r\n                {/* <img src={actors.profile_path} alt={actors.name} /> */}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport API from '../../services/movie-api';\r\nexport default function Reviews({ movieId }) {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    API.movieReviews(movieId).then(setReviews);\r\n  }, [movieId]);\r\n  console.log(reviews);\r\n  return (\r\n    <>\r\n      {reviews.length > 0 && (\r\n        <ul>\r\n          {reviews.map(review => {\r\n            return (\r\n              <li key={review.id}>\r\n                <p>{review.content}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { NavLink, useRouteMatch } from 'react-router-dom';\r\n// import Cast from '../Cast';\r\n// import { Switch, Route } from 'react-router';\r\n// import Reviews from '../Reviews';\r\n// import { useState } from 'react/cjs/react.development';\r\nexport default function MovieNavigation() {\r\n  const { url } = useRouteMatch();\r\n  //   const [castList, setCastList] = useState(false);\r\n  //   const [reviewsList, setReviewsList] = useState(false);\r\n  //   const getCast = () => {\r\n  //     if (castList === true) {\r\n  //       setCastList(false);\r\n  //     }\r\n  //     setCastList(true);\r\n  //   };\r\n  //   const getReviews = () => {\r\n  //     if (reviewsList === true) {\r\n  //       setReviewsList(false);\r\n  //     }\r\n  //     setReviewsList(true);\r\n  //   };\r\n  return (\r\n    <>\r\n      <ul>\r\n        <NavLink\r\n          to={`${url}/cast`}\r\n          // onClick={getCast}\r\n        >\r\n          Cast\r\n        </NavLink>\r\n        <NavLink\r\n          to={`${url}/reviews`}\r\n          // onClick={getReviews}\r\n        >\r\n          Reviews\r\n        </NavLink>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useParams,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  // NavLink,\r\n} from 'react-router-dom';\r\nimport API from '../../services/movie-api';\r\nimport InfoMovieCard from '../../components/InfoMovieCard';\r\nimport Cast from '../../components/Cast';\r\nimport Reviews from '../../components/Reviews';\r\nimport MovieNavigation from '../../components/MovieNavigation';\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const { url } = useRouteMatch();\r\n\r\n  const [movieInfo, setMovieInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    API.movieInfo(movieId).then(setMovieInfo);\r\n  }, [movieId]);\r\n\r\n  // const { url } = useRouteMatch();\r\n  // const [castList, setCastList] = useState(false);\r\n  // const [reviewsList, setReviewsList] = useState(false);\r\n  // const getCast = () => {\r\n  //   if (castList === true) {\r\n  //     setCastList(false);\r\n  //   }\r\n  //   setCastList(true);\r\n  // };\r\n  // const getReviews = () => {\r\n  //   if (reviewsList === true) {\r\n  //     setReviewsList(false);\r\n  //   }\r\n  //   setReviewsList(true);\r\n  // };\r\n  return (\r\n    <>\r\n      {movieInfo && <InfoMovieCard movieInfo={movieInfo} />}\r\n      {movieInfo && <MovieNavigation />}\r\n      {/* <ul>\r\n        <NavLink to={`${url}/cast`} onClick={getCast}>\r\n          Cast\r\n        </NavLink>\r\n        <NavLink to={`${url}/reviews`} onClick={getReviews}>\r\n          Reviews\r\n        </NavLink>\r\n      </ul> */}\r\n      <Switch>\r\n        <Route exact path={`${url}/cast`}>\r\n          <Cast movieId={movieId} />\r\n        </Route>\r\n        <Route exact path={`${url}/reviews`}>\r\n          <Reviews movieId={movieId} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport API from '../../services/movie-api';\r\nimport ListAllMovies from '../../components/ListAllMovies';\r\nimport MovieDetailsPage from '../MovieDetailsPage';\r\n\r\nexport default function HomePage() {\r\n  const [movies, setMovies] = useState([]);\r\n  useEffect(() => {\r\n    API.getMovies().then(list => setMovies(list));\r\n  }, []);\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <ListAllMovies moviesList={movies} />\r\n      </Route>\r\n      <Route path=\"/movies/:movieId\" component={MovieDetailsPage} />\r\n    </Switch>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nexport default function Form({ onSubmit }) {\r\n  const [searchWord, setSearchWord] = useState('');\r\n\r\n  const handleInputSearch = e => {\r\n    const { value } = e.target;\r\n    setSearchWord(value);\r\n    console.log(searchWord);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (searchWord.trim() === '') {\r\n      console.log('що шукати?');\r\n    }\r\n    onSubmit(searchWord);\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setSearchWord('');\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>MoviesPage</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movie\"\r\n          onChange={handleInputSearch}\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport API from '../../services/movie-api';\r\n// import queryString from 'query-string';\r\nimport MovieDetailsPage from '../MovieDetailsPage/MovieDetailsPage';\r\nimport Form from '../../components/Form';\r\nimport ListAllMovies from '../../components/ListAllMovies/ListAllMovies';\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  // useHistory,\r\n  // useLocation,\r\n} from 'react-router-dom';\r\n\r\nexport default function MoviesPage() {\r\n  const [searchWord, setSearchWord] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  //   const history = useHistory();\r\n  //   const location = useLocation();\r\n  const { path } = useRouteMatch();\r\n  useEffect(() => {\r\n    if (searchWord === '') {\r\n      return;\r\n    }\r\n    API.searchWordMovie(searchWord).then(movies => {\r\n      setMovies(prev => [...prev, ...movies]);\r\n      console.log(movies);\r\n    });\r\n  }, [searchWord]);\r\n\r\n  const onSubmitForm = searchWord => {\r\n    setSearchWord(searchWord);\r\n    console.log();\r\n  };\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path={`${path}/:movieId`} component={MovieDetailsPage} />\r\n        <Route exact path=\"/movies\">\r\n          <Form onSubmit={onSubmitForm} />\r\n          <ListAllMovies moviesList={movies} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\n//   useEffect(() => {\r\n//     const movie = queryString.parse(location.search).query;\r\n//     if (!movie) {\r\n//       setMovies([]);\r\n//     }\r\n//     if (movie) {\r\n//       API.searchWordMovie(movie).then(res => setMovies(res));\r\n//       setQuery('');\r\n//     }\r\n//   }, [location.search]);\r\n//   const handleInputSearch = e => {\r\n//     const inputQuery = e.target.value;\r\n//     setQuery(inputQuery);\r\n//   };\r\n//   const handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     history.push({ ...location, search: `?query=${query}` });\r\n//     reset();\r\n//   };\r\n","import { Switch, Route } from 'react-router';\nimport Container from '../Container';\nimport Navigation from '../Navigation';\nimport HomePage from '../../views/HomePage';\nimport MoviesPage from '../../views/MoviesPage';\n\nexport default function App() {\n  return (\n    <Container>\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/movies\" component={MoviesPage} />\n        <Route component={HomePage} />\n      </Switch>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}