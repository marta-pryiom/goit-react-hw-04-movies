{"version":3,"sources":["components/NoInfo/NoInfo.module.css","components/NoInfo/NoInfo.js","components/Cast/Cast.module.css","components/Cast/Cast.js"],"names":["module","exports","NoInfo","className","s","Box","Text","Cast","movieId","console","log","useState","actors","setActors","useEffect","API","movieCast","then","length","ListCast","map","actor","CastItem","name","character","id"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,IAAM,sB,8FCArC,SAASC,IACtB,OACE,qBAAKC,UAAWC,IAAEC,IAAlB,SACE,mBAAGF,UAAWC,IAAEE,KAAhB,uC,mBCHNN,EAAOC,QAAU,CAAC,SAAW,uBAAuB,SAAW,uBAAuB,KAAO,qB,0ICK9E,SAASM,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7BC,QAAQC,IAAIF,GAEZ,MAA4BG,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OALAC,qBAAU,WACRC,IAAIC,UAAUR,GAASS,KAAKJ,KAC3B,CAACL,IAEJC,QAAQC,IAAIE,GAEV,mCACGA,EAAOM,OAAS,EACf,oBAAIf,UAAWC,IAAEe,SAAjB,SACGP,EAAOQ,KAAI,SAAAC,GACV,OACE,qBAAmBlB,UAAWC,IAAEkB,SAAhC,UACE,oBAAGnB,UAAWC,IAAEE,KAAhB,cAAwBe,EAAME,QAC9B,oBAAGpB,UAAWC,IAAEE,KAAhB,yBAAmCe,EAAMG,eAFlCH,EAAMI,SAQrB,cAACvB,EAAA,EAAD","file":"static/js/cast.7e2b60a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"NoInfo_Text__35xdJ\",\"Box\":\"NoInfo_Box__2yKEk\"};","import s from './NoInfo.module.css';\r\nexport default function NoInfo() {\r\n  return (\r\n    <div className={s.Box}>\r\n      <p className={s.Text}>No information found!</p>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListCast\":\"Cast_ListCast__1VeL_\",\"CastItem\":\"Cast_CastItem__266Bp\",\"Text\":\"Cast_Text__3ojph\"};","import { useState, useEffect } from 'react';\r\nimport s from './Cast.module.css';\r\nimport NoInfo from '../NoInfo';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport API from '../../services/movie-api';\r\nexport default function Cast({ movieId }) {\r\n  console.log(movieId);\r\n\r\n  const [actors, setActors] = useState([]);\r\n  useEffect(() => {\r\n    API.movieCast(movieId).then(setActors);\r\n  }, [movieId]);\r\n\r\n  console.log(actors);\r\n  return (\r\n    <>\r\n      {actors.length > 0 ? (\r\n        <ul className={s.ListCast}>\r\n          {actors.map(actor => {\r\n            return (\r\n              <li key={actor.id} className={s.CastItem}>\r\n                <p className={s.Text}> {actor.name}</p>\r\n                <p className={s.Text}>character : {actor.character}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <NoInfo />\r\n      )}\r\n    </>\r\n  );\r\n}\r\nCast.propTypes = {\r\n  movieId: PropTypes.string,\r\n  // movieId: PropTypes.number,\r\n};\r\n"],"sourceRoot":""}