{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Navigation/Navigation.js","services/movie-api.js","components/MoviePreview/MoviePreview.js","components/ListAllMovies/ListAllMovies.js","components/InfoMovieCard/InfoMovieCard.js","views/MovieDetailsPage/MovieDetailsPage.js","views/HomePage/HomePage.js","views/MoviesPage/MoviesPage.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","Feedback","Navigation","exact","to","Link","activeClassName","ActiveLink","API_KEY","a","axios","get","data","trends","results","console","error","query","defaults","baseURL","movieInfo","movieId","response","log","message","id","API","getMovies","searchWordMovie","movieCast","movieReviews","MoviePreview","title","poster","posterUrl","vote","card","thumb","src","alt","text","defaultProps","ListAllMovies","moviesList","location","useLocation","length","map","vote_average","poster_path","media_type","name","pathname","state","from","InfoMovieCard","info","MovieDetailsPage","useParams","useRouteMatch","url","path","useState","setMovieInfo","useEffect","then","HomePage","movies","setMovies","list","component","MoviesPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2efdb3e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"Navigation_Link__1IsN4\",\"ActiveLink\":\"Navigation_ActiveLink__XB_Ok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback\":\"Container_Feedback__2_12q\"};","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.Feedback}>{children}</div>;\r\n}\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\nexport default Container;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <NavLink exact to=\"/\" className={s.Link} activeClassName={s.ActiveLink}>\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        exact\r\n        to=\"/movies\"\r\n        className={s.Link}\r\n        activeClassName={s.ActiveLink}\r\n      >\r\n        Movies\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nconst API_KEY = '98a377205a96ff71da3bcf70b617967d';\r\n\r\n// const API_KEY = '7fa19289450d103be1f54a0c993182c2';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\r\n\r\n/*список самых популярных фильмов на сегодня для создания коллекции на главной странице.*/\r\nasync function getMovies() {\r\n  try {\r\n    const { data } = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\r\n    const trends = data.results;\r\n    return trends;\r\n  } catch (err) {\r\n    console.error('Error with fetch movie-list');\r\n  }\r\n}\r\n\r\n/* поиск кинофильма по ключевому слову на странице фильмов*/\r\nasync function searchWordMovie(query) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n    );\r\n    const results = data.results;\r\n    return results;\r\n  } catch (err) {\r\n    console.error('Error with fetch searching by name');\r\n  }\r\n}\r\n\r\n/*запрос полной информации о фильме для страницы кинофильма.*/\r\n\r\n// async function movieInfo(id) {\r\n//   try {\r\n//     const { data } = await axios.get(\r\n//       `3/movie/${id}?api_key=${API_KEY}&language=en-US`\r\n//     );\r\n//     return data;\r\n//   } catch (err) {\r\n//     console.error('Error with fetch info about movie');\r\n//   }\r\n// }\r\n\r\nconst movieInfo = async movieId => {\r\n  try {\r\n    const response = await axios.get(\r\n      `3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n// movieInfo(796499).then(res => console.log(res));\r\n\r\n/*запрос информации о актёрском составе для страницы кинофильма. */\r\nasync function movieCast(id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return data;\r\n  } catch (err) {\r\n    console.error('Error with fetch cast of movie');\r\n  }\r\n}\r\n\r\n/* запрос обзоров для страницы кинофильма.*/\r\nasync function movieReviews(id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n    );\r\n    return data;\r\n  } catch (err) {\r\n    console.error('Error with fetch reviews');\r\n  }\r\n}\r\n\r\nconst API = {\r\n  getMovies,\r\n  searchWordMovie,\r\n  movieInfo,\r\n  movieCast,\r\n  movieReviews,\r\n};\r\nexport default API;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from './MoviePreview.module.css';\r\n// import placeholder from '../../assets/images/placeholder.png';\r\n\r\n// Компонент превью фильма в общем списке фильмов\r\nconst MoviePreview = ({ title, poster, vote }) => {\r\n  const posterUrl = poster;\r\n  //   const posterUrl = poster\r\n  //     ? `https://image.tmdb.org/t/p/w500${poster}`\r\n  //     : placeholder;\r\n  //   const voteStyle = vote > 5 ? s['vote--top'] : s['vote--low'];\r\n\r\n  return (\r\n    <div className={s.card}>\r\n      <div className={s.thumb}>\r\n        <img src={posterUrl} alt={title} className={s.poster} />\r\n      </div>\r\n\r\n      <p className={s.text}>\r\n        <span>{title}</span>\r\n        {/* {vote ? <b className={voteStyle}>{vote}</b> : null} */}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoviePreview.defaultProps = {\r\n  poster: '',\r\n  vote: null,\r\n};\r\n\r\nMoviePreview.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  poster: PropTypes.string,\r\n  vote: PropTypes.number,\r\n};\r\n\r\nexport default MoviePreview;\r\n","import { Link, useLocation } from 'react-router-dom';\r\nimport MoviePreview from '../MoviePreview';\r\nexport default function ListAllMovies({ moviesList }) {\r\n  console.log(moviesList);\r\n  const location = useLocation();\r\n  return (\r\n    <ul>\r\n      {moviesList.length &&\r\n        moviesList.map(\r\n          ({ id, title, vote_average, poster_path, media_type, name }) => (\r\n            <li key={id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `movies/${id}`,\r\n                  state: {\r\n                    from: location,\r\n                  },\r\n                }}\r\n              >\r\n                <MoviePreview\r\n                  title={title}\r\n                  poster={poster_path}\r\n                  vote={vote_average}\r\n                />\r\n                {/* <img src={poster_path} alt={media_type} />\r\n            <p>{vote_average}</p> */}\r\n              </Link>\r\n            </li>\r\n          )\r\n        )}\r\n    </ul>\r\n  );\r\n}\r\n","export default function InfoMovieCard({ info }) {\r\n  const {\r\n    title,\r\n    // release_date,\r\n    // vote_average,\r\n    // poster_path,\r\n    // overview,\r\n    // genres,\r\n    name,\r\n  } = info;\r\n  return (\r\n    <article>\r\n      <h1>{title || name}</h1>\r\n      {/* <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} />\r\n      <div>\r\n        {title && (\r\n          <h1>\r\n            {title}\r\n            {release_date ? (\r\n              <span>({release_date.substring(0, 4)})</span>\r\n            ) : (\r\n              <span>(N/A)</span>\r\n            )}\r\n          </h1>\r\n        )}\r\n      </div> */}\r\n    </article>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, useRouteMatch } from 'react-router-dom';\r\nimport API from '../../services/movie-api';\r\nimport InfoMovieCard from '../../components/InfoMovieCard';\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const { url, path } = useRouteMatch();\r\n\r\n  const [movieInfo, setMovieInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    API.movieInfo(movieId).then(movieInfo => setMovieInfo(movieInfo));\r\n  }, [movieId]);\r\n\r\n  return <InfoMovieCard info={movieInfo} />;\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport API from '../../services/movie-api';\r\nimport ListAllMovies from '../../components/ListAllMovies';\r\nimport MovieDetailsPage from '../MovieDetailsPage';\r\n\r\nexport default function HomePage() {\r\n  const [movies, setMovies] = useState([]);\r\n  useEffect(() => {\r\n    API.getMovies().then(list => setMovies(list));\r\n  }, []);\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <ListAllMovies moviesList={movies} />\r\n      </Route>\r\n      <Route path=\"/movies/:movieId\" component={MovieDetailsPage} />\r\n    </Switch>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport API from '../../services/movie-api';\r\nimport queryString from 'query-string';\r\n// import Form from '../../components/Form';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  useHistory,\r\n  useLocation,\r\n} from 'react-router-dom';\r\n\r\nexport default function MoviesPage() {\r\n  //   const [query, setQuery] = useState('');\r\n  //   const [movies, setMovies] = useState([]);\r\n  //   const history = useHistory();\r\n  //   const location = useLocation();\r\n  //   const { path } = useRouteMatch();\r\n  //   useEffect(() => {\r\n  //     const movie = queryString.parse(location.search).query;\r\n  //     if (!movie) {\r\n  //       setMovies([]);\r\n  //     }\r\n  //     if (movie) {\r\n  //       API.searchWordMovie(movie).then(res => setMovies(res));\r\n  //       setQuery('');\r\n  //     }\r\n  //   }, [location.search]);\r\n  //   const handleInputSearch = e => {\r\n  //     const inputQuery = e.target.value;\r\n  //     setQuery(inputQuery);\r\n  //   };\r\n  //   const handleSubmit = e => {\r\n  //     e.preventDefault();\r\n  //     if (query.trim() === '') {\r\n  //       console.log('що шукати?');\r\n  //     }\r\n  //     history.push({ ...location, search: `?query=${query}` });\r\n  //     reset();\r\n  //   };\r\n  //   const reset = () => {\r\n  //     setQuery('');\r\n  //   };\r\n  return <h1>hello</h1>;\r\n  //   <Switch>\r\n  //       <Route path={`${path}/:movieId`} component={MovieDetailsPage} />\r\n  //       <Route\r\n  //         exact\r\n  //         path=\"/movies\"\r\n  //         render={() => (\r\n  //           <div>\r\n  //             <h1>MoviesPage</h1>\r\n  //             <form onSubmit={handleSubmit}>\r\n  //               <input\r\n  //                 type=\"text\"\r\n  //                 value={query}\r\n  //                 autoComplete=\"off\"\r\n  //                 autoFocus\r\n  //                 placeholder=\"Search movie\"\r\n  //                 onChange={handleInputSearch}\r\n  //               />\r\n  //               <button type=\"submit\">Search</button>\r\n  //             </form>\r\n  //           </div>)\r\n\r\n  //   </Switch>\r\n  // );\r\n}\r\n","import { Switch, Route } from 'react-router';\nimport Container from '../Container';\nimport Navigation from '../Navigation';\nimport HomePage from '../../views/HomePage';\nimport MoviesPage from '../../views/MoviesPage';\n\nexport default function App() {\n  return (\n    <Container>\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/movies\" component={MoviesPage} />\n        <Route component={HomePage} />\n      </Switch>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}