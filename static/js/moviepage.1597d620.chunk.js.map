{"version":3,"sources":["services/movie-api.js","components/InfoMovieCard/InfoMovieCard.js","components/MovieNavigation/MovieNavigation.js","views/MovieDetailsPage/MovieDetailsPage.js","components/MoviePreview/MoviePreview.js","components/ListAllMovies/ListAllMovies.js","components/MoviePreview/MoviePreview.module.css","components/ListAllMovies/ListAllMovies.module.css","components/InfoMovieCard/InfoMovieCard.module.css","components/MovieNavigation/MovieNavigation.module.css","components/ButtonTop/ButtonTop.module.css","components/ButtonTop/ButtonTop.js","components/Form/Form.module.css","components/Form/Form.js","views/MoviesPage/MoviesPage.js"],"names":["API_KEY","a","page","axios","get","data","trends","results","console","error","query","defaults","baseURL","movieInfo","movieId","response","log","cast","id","API","getMovies","searchWordMovie","movieCast","movieReviews","InfoMovieCard","title","release_date","poster_path","overview","genres","name","posterUrl","location","useLocation","history","useHistory","className","s","Button","type","onClick","push","state","from","MovieArticle","Card","Image","src","alt","Box","OverView","Genres","map","el","MovieNavigation","url","useRouteMatch","LIstAddInfo","Link","activeClassName","ActiveLink","to","Cast","lazy","Reviews","MovieDetailsPage","useParams","useState","setMovieInfo","useEffect","then","fallback","Loader","exact","path","MoviePreview","poster","vote","Text","NameMovie","voteStyle","defaultProps","ListAllMovies","moviesList","ListMovie","length","vote_average","MovieItem","pathname","module","exports","ButtonTop","window","scrollTo","top","left","behavior","Form","onSubmit","searchWord","setSearchWord","reset","e","preventDefault","trim","toast","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","target","value","toLowerCase","FormButton","MoviesPage","movies","setMovies","prev","component"],"mappings":"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","file":"static/js/moviepage.1597d620.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst API_KEY = '98a377205a96ff71da3bcf70b617967d';\r\n\r\n// const API_KEY = '7fa19289450d103be1f54a0c993182c2';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\r\n\r\n/*список самых популярных фильмов на сегодня для создания коллекции на главной странице.*/\r\nasync function getMovies(page = 1) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `3/trending/all/day?api_key=${API_KEY}&page=${page}`\r\n    );\r\n    const trends = data.results;\r\n    return trends;\r\n  } catch (err) {\r\n    console.error('Error with fetch movie-list');\r\n  }\r\n}\r\n\r\n/* поиск кинофильма по ключевому слову на странице фильмов*/\r\nasync function searchWordMovie(query) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n    );\r\n    const results = data.results;\r\n    return results;\r\n  } catch (err) {\r\n    console.error('Error with fetch searching by name');\r\n  }\r\n}\r\n\r\n/*запрос полной информации о фильме для страницы кинофильма.*/\r\n\r\nconst movieInfo = async movieId => {\r\n  try {\r\n    const response = await axios.get(\r\n      `3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log('Error with fetch searching movie by id');\r\n  }\r\n};\r\n\r\n/*запрос информации о актёрском составе для страницы кинофильма. */\r\nasync function movieCast(movieId) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n    );\r\n    return data.cast;\r\n  } catch (err) {\r\n    console.error('Error with fetch cast of movie');\r\n  }\r\n}\r\n// movieCast(438631).then(res => console.log(res));\r\n/* запрос обзоров для страницы кинофильма.*/\r\nasync function movieReviews(id) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n    );\r\n    return data.results;\r\n  } catch (err) {\r\n    console.error('Error with fetch reviews');\r\n  }\r\n}\r\n// movieReviews(438631).then(res => console.log(res));\r\nconst API = {\r\n  getMovies,\r\n  searchWordMovie,\r\n  movieInfo,\r\n  movieCast,\r\n  movieReviews,\r\n};\r\nexport default API;\r\n","import s from './InfoMovieCard.module.css';\r\nimport { useLocation, useHistory } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function InfoMovieCard({ movieInfo }) {\r\n  console.log(movieInfo);\r\n  const {\r\n    title,\r\n    release_date,\r\n    // vote_average,\r\n    poster_path,\r\n    overview,\r\n    genres,\r\n    name,\r\n  } = movieInfo;\r\n  const posterUrl = poster_path\r\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n    : 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  console.log(location);\r\n  const onGoBack = () => {\r\n    history.push(location?.state?.from ?? '/movie');\r\n  };\r\n  return (\r\n    <>\r\n      <button className={s.Button} type=\"button\" onClick={onGoBack}>\r\n        {/* <svg>\r\n          <use fill=\"green\" href=\"../images/sprite.svg#icon-undo2\" />\r\n        </svg> */}\r\n        Go Back\r\n      </button>\r\n      <article className={s.MovieArticle}>\r\n        <div className={s.Card}>\r\n          <img className={s.Image} src={posterUrl} alt={title || name} />\r\n        </div>\r\n        <div className={s.Box}>\r\n          {(title || name) && (\r\n            <h1>\r\n              {title || name}\r\n              {release_date ? (\r\n                <span>({release_date})</span>\r\n              ) : (\r\n                <span>(N/A)</span>\r\n              )}\r\n            </h1>\r\n          )}\r\n          <div className={s.OverView}>\r\n            <p>{overview}</p>\r\n            {genres && (\r\n              <ul className={s.Genres}>\r\n                {genres.map(el => (\r\n                  <li key={el.id}>{el.name}</li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </>\r\n  );\r\n}\r\nInfoMovieCard.propTypes = {\r\n  movieInfo: PropTypes.object,\r\n};\r\n","import { NavLink, useRouteMatch } from 'react-router-dom';\r\nimport s from './MovieNavigation.module.css';\r\n// import Cast from '../Cast';\r\n// import { Switch, Route } from 'react-router';\r\n// import Reviews from '../Reviews';\r\n// import { useState } from 'react/cjs/react.development';\r\nexport default function MovieNavigation() {\r\n  const { url } = useRouteMatch();\r\n  //   const [castList, setCastList] = useState(false);\r\n  //   const [reviewsList, setReviewsList] = useState(false);\r\n  //   const getCast = () => {\r\n  //     if (castList === true) {\r\n  //       setCastList(false);\r\n  //     }\r\n  //     setCastList(true);\r\n  //   };\r\n  //   const getReviews = () => {\r\n  //     if (reviewsList === true) {\r\n  //       setReviewsList(false);\r\n  //     }\r\n  //     setReviewsList(true);\r\n  //   };\r\n  return (\r\n    <>\r\n      <ul className={s.LIstAddInfo}>\r\n        <NavLink\r\n          className={s.Link}\r\n          activeClassName={s.ActiveLink}\r\n          to={`${url}/cast`}\r\n          // onClick={getCast}\r\n        >\r\n          Cast\r\n        </NavLink>\r\n        <NavLink\r\n          className={s.Link}\r\n          activeClassName={s.ActiveLink}\r\n          to={`${url}/reviews`}\r\n          // onClick={getReviews}\r\n        >\r\n          Reviews\r\n        </NavLink>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { lazy, Suspense } from 'react';\r\nimport {\r\n  useParams,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  // NavLink,\r\n} from 'react-router-dom';\r\nimport API from '../../services/movie-api';\r\nimport InfoMovieCard from '../../components/InfoMovieCard';\r\nimport MovieNavigation from '../../components/MovieNavigation';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst Cast = lazy(() =>\r\n  import('../../components/Cast' /* webpackChunkName:\"cast\"*/)\r\n);\r\nconst Reviews = lazy(() =>\r\n  import('../../components/Reviews' /* webpackChunkName:\"reviews\"*/)\r\n);\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const { url } = useRouteMatch();\r\n\r\n  const [movieInfo, setMovieInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      API.movieInfo(movieId).then(setMovieInfo);\r\n    } catch (error) {\r\n      <h1>no information</h1>;\r\n    }\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {movieInfo && <InfoMovieCard movieInfo={movieInfo} />}\r\n      {movieInfo && <MovieNavigation />}\r\n      <Suspense fallback={<Loader />}>\r\n        <Switch>\r\n          <Route exact path={`${url}/cast`}>\r\n            <Cast movieId={movieId} />\r\n          </Route>\r\n          <Route exact path={`${url}/reviews`}>\r\n            <Reviews movieId={movieId} />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './MoviePreview.module.css';\r\n// import placeholder from '../../assets/images/placeholder.png';\r\n\r\nconst MoviePreview = ({ title, poster, vote, name }) => {\r\n  // const posterUrl = poster;\r\n  const posterUrl = poster\r\n    ? `https://image.tmdb.org/t/p/w500${poster}`\r\n    : 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img className={s.Image} src={posterUrl} alt={title || name} />\r\n      </div>\r\n\r\n      <p className={s.Text}>\r\n        <span className={s.NameMovie}>{title || name}</span>\r\n        {vote ? <b className={s.voteStyle}>{vote}</b> : null}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoviePreview.defaultProps = {\r\n  poster: '',\r\n  vote: null,\r\n};\r\n\r\nMoviePreview.propTypes = {\r\n  name: PropTypes.string,\r\n  title: PropTypes.string,\r\n  poster: PropTypes.string,\r\n  vote: PropTypes.number,\r\n};\r\n\r\nexport default MoviePreview;\r\n","import { Link, useLocation } from 'react-router-dom';\r\nimport MoviePreview from '../MoviePreview';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ListAllMovies.module.css';\r\n\r\nexport default function ListAllMovies({ moviesList }) {\r\n  console.log(moviesList);\r\n  const location = useLocation();\r\n  console.log(location);\r\n  return (\r\n    <ul className={s.ListMovie}>\r\n      {moviesList.length &&\r\n        moviesList.map(({ id, title, vote_average, poster_path, name }) => (\r\n          <li key={id} className={s.MovieItem}>\r\n            <Link\r\n              to={{\r\n                pathname: `movies/${id}`,\r\n                state: {\r\n                  from: location,\r\n                },\r\n              }}\r\n            >\r\n              <MoviePreview\r\n                name={name}\r\n                title={title}\r\n                poster={poster_path}\r\n                vote={vote_average}\r\n              />\r\n            </Link>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\nListAllMovies.propTypes = {\r\n  moviesList: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"MoviePreview_Image__3dpIc\",\"Text\":\"MoviePreview_Text__gYRtO\",\"NameMovie\":\"MoviePreview_NameMovie__1JYMO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListMovie\":\"ListAllMovies_ListMovie__1Q7uZ\",\"MovieItem\":\"ListAllMovies_MovieItem__2YMrL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieArticle\":\"InfoMovieCard_MovieArticle__3WHAp\",\"Image\":\"InfoMovieCard_Image__3uJvB\",\"Text\":\"InfoMovieCard_Text__1sARM\",\"Card\":\"InfoMovieCard_Card__2Q3Ck\",\"OverView\":\"InfoMovieCard_OverView__N35mE\",\"Box\":\"InfoMovieCard_Box__3kXOy\",\"Genres\":\"InfoMovieCard_Genres__fh5Yn\",\"Button\":\"InfoMovieCard_Button__28xdY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LIstAddInfo\":\"MovieNavigation_LIstAddInfo__1929C\",\"Link\":\"MovieNavigation_Link__MmHUZ\",\"ActiveLink\":\"MovieNavigation_ActiveLink__1mFp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ButtonTop_Button__35thE\",\"Image\":\"ButtonTop_Image__1q7Xn\"};","import s from './ButtonTop.module.css';\r\n\r\nexport default function ButtonTop() {\r\n  // const [visible, setVisible] = useState(true);\r\n  const onClickScrollTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n    // setVisible(false);\r\n  };\r\n  // useEffect(() => {\r\n  //   if (movies.length < 20) {\r\n  //     return;\r\n  //   }\r\n  //   setVisible(true);\r\n  //   window.scrollTo({\r\n  //     top: 0,\r\n  //     left: 0,\r\n  //     behavior: 'smooth',\r\n  //   });\r\n  //   setVisible(false);\r\n  // }, [movies.length]);\r\n\r\n  return (\r\n    <>\r\n      <div className={s.Button}>\r\n        <button>\r\n          <img\r\n            onClick={onClickScrollTop}\r\n            src=\"https://img.icons8.com/officel/80/000000/double-up.png\"\r\n            alt=\"arrow up\"\r\n            className={s.Image}\r\n          />\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormButton\":\"Form_FormButton__1DVq9\",\"SearchFormInput\":\"Form_SearchFormInput__bXKgd\",\"Box\":\"Form_Box__Jwi6k\"};","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Form.module.css';\r\nexport default function Form({ onSubmit }) {\r\n  const [searchWord, setSearchWord] = useState('');\r\n\r\n  const handleInputSearch = e => {\r\n    setSearchWord(e.target.value.toLowerCase());\r\n    console.log(searchWord);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (searchWord.trim() === '') {\r\n      toast.error('Enter a word to search for!');\r\n      return;\r\n    }\r\n\r\n    onSubmit(searchWord);\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setSearchWord('');\r\n  };\r\n  return (\r\n    <div>\r\n      <form className={s.Box} onSubmit={handleSubmit}>\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movie\"\r\n          onChange={handleInputSearch}\r\n        />\r\n        <button className={s.FormButton} type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport API from '../../services/movie-api';\r\n// import { toast } from 'react-toastify';\r\n// import queryString from 'query-string';\r\nimport ButtonTop from '../../components/ButtonTop';\r\nimport MovieDetailsPage from '../MovieDetailsPage/MovieDetailsPage';\r\nimport Form from '../../components/Form';\r\nimport ListAllMovies from '../../components/ListAllMovies/ListAllMovies';\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  // useHistory,\r\n  // useLocation,\r\n} from 'react-router-dom';\r\n\r\nexport default function MoviesPage() {\r\n  const [searchWord, setSearchWord] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  //   const history = useHistory();\r\n  //   const location = useLocation();\r\n  const { path } = useRouteMatch();\r\n  useEffect(() => {\r\n    if (searchWord === '') {\r\n      return;\r\n    }\r\n\r\n    API.searchWordMovie(searchWord).then(movies => {\r\n      setMovies(prev => [...prev, ...movies]);\r\n      console.log(movies);\r\n    });\r\n  }, [searchWord]);\r\n\r\n  const onSubmitForm = searchWord => {\r\n    setSearchWord(searchWord);\r\n    console.log();\r\n  };\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path={`${path}/:movieId`} component={MovieDetailsPage} />\r\n        <Route exact path=\"/movies\">\r\n          <Form onSubmit={onSubmitForm} />\r\n          {movies.length !== 0 && <ListAllMovies moviesList={movies} />}\r\n          {movies.length > 10 && <ButtonTop />}\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\n//   useEffect(() => {\r\n//     const movie = queryString.parse(location.search).query;\r\n//     if (!movie) {\r\n//       setMovies([]);\r\n//     }\r\n//     if (movie) {\r\n//       API.searchWordMovie(movie).then(res => setMovies(res));\r\n//       setQuery('');\r\n//     }\r\n//   }, [location.search]);\r\n//   const handleInputSearch = e => {\r\n//     const inputQuery = e.target.value;\r\n//     setQuery(inputQuery);\r\n//   };\r\n//   const handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     history.push({ ...location, search: `?query=${query}` });\r\n//     reset();\r\n//   };\r\n"],"sourceRoot":""}